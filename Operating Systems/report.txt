
================================= Title ==================================

Operating Systems - Project 2
InterProcess communication (IPC) - pipes

========================== Contact Information ===========================

Αριστοτέλειο Πανεπιστήμιο Θεσσαλονίκης

Τμήμα Ηλεκτρολόγων Μηχανικών 
& Μηχανικών Υπολογιστών 

Αντρέας Χατζηθωμάς - 8026 
antreasc@auth.gr

13/01/2016


=========================== Project Information ===========================

Στην 2η εργασία καλούμασταν να υλοποιήσουμε έναν echo server, όπου ένας 
client θα στέλνει ένα μήνυμα στον server και αυτός θα το αναπαράγει. 
Η υλοποίηση αποτελείται από 2 προγράμματα, τον client και τον server. 

Server: 
Στην αρχή, ο server δημιουργεί ένα ειδικό αρχείο fifo (named pipe) 
χρησιμοποιώντας την εντολή mkfifo() με τις απαραίτητες παραμέτρους (file 
path και άδειες πρόσβασης). Αφού γίνει αυτό, καλεί την εντολή fork() για 
την δημιουργία γονικής (parent) και θυγατρικής (child) διεργασίας. Η 
θυγατρική διεργασία καλεί την main2() του client. H γονική διεργασία 
εκτελεί την οpen() ούτως ώστε να γίνει ανάγνωση του αρχείου και να 
εκτυπωθεί το μήνυμα που καταχωρήθηκε από τον client. Μετά γίνεται το 
κλείσιμo του αρχείου με την εντολή close, και τέλος η διαγραφή του με την 
εντολή unlink. Επίσης, για αποφυγή διεργασιών "Zombie" στο τέλος της 
main() γίνεται η χρήση της εντολής wait() με παράμετρο "0" ούτως ώστε να 
σταματήσει η εκτέλεση του γονέα μέχρι να τερματίσει η θυγατρική διεργασία. 

Client:
Στον client, γίνεται άνοιγμα αρχείου για εγγραφή και ο χρήστης καλείται 
να πληκτρολογήσει ένα μήνυμα στην κονσόλα. Ακολούθως, το μήνυμα αυτό 
εγγράφεται στο αρχείο και γίνεται το κλείσιμo του αρχείου αυτού. 

Server & Client: 
Στην αρχή και των 2 προγραμμάτων, ορίζεται το μονοπάτι (path) του αρχείου 
με το οποίο θα γίνει η σωλήνωση, το μέγεθος του buffer καθώς και όλες οι 
απαραίτητες μεταβλητές. Επίσης, και στα 2 προγράμματα χρησιμοποιήθηκαν εντολές 
printf()  κατά τη δημιουργία και εκτέλεση των 2 προγραμμάτων για σκοπούς 
ελέγχου ορθότητας του τελικού προγράμματος.


makefile: 
Για το compile του προγράμματος δημιουργήθηκε ένα αρχείο makefile με το 
οποίο δίνοντας την εντολή "make all" στο τερματικό, παράγεται το εκτελέσιμο 
πρόγραμμα. Για να γίνει αυτό, πρώτα δημιουργούνται (compile) τα προγράμματα 
clinet.o και server.o και ακολούθως μέσω της εντολής "gcc run server.o client.o" 
παράγεται το τελικό εκτελέσιμο πρόγραμμα το οποίο τρέχει δίνοντας στο τερματικό 
την εντολή "./run". Τέλος, δίνοντας την εντολή "make clean" στο τερματικό, 
διαγράφονται όλα τα περιττά αρχεία που δημιουργήθηκαν.  

